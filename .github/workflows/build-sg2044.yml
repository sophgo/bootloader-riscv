name: sg2044-firmware

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

jobs:
  sg2044-firmware:
    runs-on: ubuntu-22.04

    env:
      mainline_toolchain: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.03.01
      mainline_toolchain_file_name: riscv64-glibc-ubuntu-22.04-gcc-nightly-2024.03.01-nightly.tar.gz
      wget_alias: 'wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0'
      ARCH: riscv
      KBUILD_BUILD_USER: riscv
      KBUILD_BUILD_HOST: riscv-builder
      KDEB_COMPRESS: xz
      CHIP: sg2044
      BRANCH: ${{ matrix.LINUX_BRANCH }}
      TOOLCHAIN_HOME: /opt/riscv/
      RV_SG2044_FSBL_BIN: https://github.com/sophgo/bootloader-riscv/releases/download/sg2044-v0.1/fsbl.bin

    steps:
      - name: Checkout bootloader-riscv
        uses: actions/checkout@v4
        with:
          path: bootloader-riscv

      - name: Checkout zsbl
        uses: actions/checkout@v4
        with:
          repository: sophgo/zsbl
          path: zsbl

      - name: Checkout opensbi
        uses: actions/checkout@v4
        with:
          repository: sophgo/opensbi
          path: opensbi
          ref: sg2044-dev

      - name: Checkout sophgo-edk2
        uses: actions/checkout@v4
        with:
          repository: sophgo/sophgo-edk2
          path: sophgo-edk2
          ref: devel-sg2044

      - name: Install software
        run: |
              sudo apt update && \
              sudo apt install -y gdisk dosfstools g++-riscv64-linux-gnu build-essential \
                                  libncurses-dev gawk flex bison openssl libssl-dev tree \
                                  dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf \
                                  device-tree-compiler xz-utils \
                                  qemu-system binfmt-support qemu-user-static curl wget \
                                  automake autotools-dev python3 libmpc-dev libmpfr-dev libgmp-dev \
                                  texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev \
                                  ninja-build uuid-dev gcc-riscv64-unknown-elf acpica-tools
              update-binfmts --display
              ${wget_alias} ${mainline_toolchain}/${mainline_toolchain_file_name}
              tar -xvf ${mainline_toolchain_file_name} -C /opt

      - name: prepare
        run: mkdir -p artifact

      - name: Compile zsbl & sbi & fsbl
        run: |
              pushd bootloader-riscv
                source scripts/envsetup.sh
                # fix build variable in github action
                source scripts/github_env.sh

                build_rv_zsbl
                build_rv_sbi
                ${wget_alias} -O "firmware/fsbl.bin" "$RV_SG2044_FSBL_BIN"
                cp -v firmware/fsbl.bin ${RV_FIRMWARE_INSTALL_DIR}/
              popd

      - name: Compile edk2
        run: |
              pushd bootloader-riscv
                sed -i 's/build -a RISCV64 -t GCC5 -b/build -a RISCV64 -t GCC5 -D FLASH_ENABLE=FALSE -b/g' scripts/envsetup.sh
                source scripts/envsetup.sh
                # fix build variable in github action
                source scripts/github_env.sh

                build_rv_edk2
              popd

      - name: Packege firmware
        run: |
              pushd bootloader-riscv
                source scripts/envsetup.sh
                # fix build variable in github action
                source scripts/github_env.sh

                build_rv_firmware_bin
                build_rv_firmware_image

                mkdir ~/firmware_artifact
                cp -v $RV_FIRMWARE_INSTALL_DIR/firmware*.bin $GITHUB_WORKSPACE/firmware_sg2044.bin
                cp -v $RV_FIRMWARE_INSTALL_DIR/firmware.img $GITHUB_WORKSPACE/firmware_sg2044.img
              popd

      - name: 'Upload Build Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: sg2044-bootloader
          path: firmware_*
          retention-days: 30
